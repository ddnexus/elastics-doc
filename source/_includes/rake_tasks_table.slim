table.code-topics cellspacing="0" cellpadding="0"
  tr
    td
      code elastic:index:create
    td
      markdown:

        This rake task reads the configuration `elastic.yml` file with your custom mappings, merges it with the internally generated mapping and routings, and creates the index. It is important to run this task when you start a new app, specially if you use the `elastic-models` gem with parent/child relationships {% see 4 %}.

        #### Environment variables

        This task can be customized with the following environment variables:

        * `FORCE` Deletes the existing indices before running. Default `false`.
        * `INDEX` String representing one or a list of indices to create. Default: `Elastic::Configuration.variables[:index]`.

      | {% shighlight sh %}
        $ rake elastic:index:create INDEX=foo,bar
        {% endshighlight %}

  tr
    td
      code elastic:index:delete
    td
      markdown:

        Deletes the index/indices.

        #### Environment variables

        This task can be customized with the following environment variables:

        * `INDEX` String representing one or a list of indices to delete. Default: `Elastic::Configuration.variables[:index]`.

  tr
    td
      code elastic:import
    td
      markdown:

        > This is a specific task provided by the `elastic-models` gem.

        It imports all or any of the models of your application.

        #### Environment variables

        This task can be customized with the following environment variables:

        * `FORCE` Deletes the existing indices before reindexing. Default `false`.
        * `BATCH_SIZE` The batch size used to retrieve the records and bulk post to the elasticsearch server. Default `1000`.
        * `TIMEOUT` The HTTP-client timeout. Default `20` for this task. (it is usually `5` for regular queries as set in `Configuration.http_client_options[:timeout]`). You might need a higher timeout if you raise the `BATCH_SIZE`.
        * `IMPORT_OPTIONS` A query string like string representing a hash of options to be used with the `find_in_batches` methods.
        * `CONFIG_FILE` The configuration file. Default `Elastic::Configuration.config_file`
        * `MODELS` Array like string representing a list of model classes. Default `Elastic::Configuration.elastic_models`.

      | {% shighlight sh %}
        $ rake elastic:import MODELS=Foo,Bar
        {% endshighlight %}

  tr
    td
      code elastic:admin:dump
    td
      markdown:

        > This is a specific task provided by the `elastic-admin` gem.

        It dumps the index/indices to a dump file, which can be feed to the `elastic:admin:load` task to reload/restore the index.

        #### Environment variables

        This task can be customized with the following environment variables:

        * `FILE` The path to the dump file. Default: `'./elastic.dump'`
        * `INDEX` String representing one or a list of indices to dump. Default: `Elastic::Configuration.variables[:index]`
        * `TYPE` String representing one or a list of types to dump.  Default: `Elastic::Configuration.variables[:type]`
        * `SCROLL` elasticsearch option for the scan_type search performed to retrieve the documents. Default: `'5m'`
        * `SIZE` Represents the number of documents per shard dumped at a time. Default: `50`
        * `VERBOSE` Prints informations during the process. Default: `true`

  tr
    td
      code elastic:admin:load
    td
      markdown:

        > This is a specific task provided by the `elastic-admin` gem.

        It reload/restore the index by loading a dump file (produced by the the `elastic:admin:dump`)

        > __Notice__: It loads the data into the original index name. If you want to reload the data into another index, you must set the `INDEX_MAP` variable.

        #### Environment variables

        This task can be customized with the following environment variables:

        * `FILE` The path to the dump file. Default: `'./elastic.dump'`
        * `BATCH_SIZE` The document batch size used to import the dump file to the elasticsearch server. Default `1000`.
        * `INDEX_MAP`  The index rename map (example: -m=dumped_index_name:loaded_index_name,a:b).
        * `TIMEOUT` The HTTP-client timeout. Default `20` for this task. (it is usually `5` for regular queries as set in `Configuration.http_client_options[:timeout]`).  You might need a higher timeout if you raise the `BATCH_SIZE`.
        * `VERBOSE` Prints informations during the process. Default: `true`


