table.code-topics cellspacing=0 cellpadding=0 style="width: 100%"
  tr
    td
      code
        | :index
    td
      markdown:
        The index or indices. You can set it as a string or as an Array of strings.

  tr
    td
      code
        | :type
    td
      markdown:
        The type or types. You can set it as a string or as an Array of strings.

  tr
    td
      code
        | :page
    td
      markdown:
        The page number of the pagination. By setting this variable you get automatically set the `:from` param, consistently with the `:size` (that is usually defaulted). Very convenient when you get the page number from a pagination link). Default 1.

  tr
    td
      code
        | :cleanable_query
    td
      markdown:
        This variable is used to pass query_string queries and it is treated in a special way by Flex. For example: if you pass a search field content from a web form directly to a query_string query, you may easily get some nasty error by elasticsearch. Indeed there are a few special characters that can break the Lucene syntax, so they should either be escaped/removed or used in a proper way. If you pass the query_string as the `:cleanable_query` variable, Flex tries to search with its content as is first (so allowing your power users to use advanced queries). But if it gets an error from elasticsearch, then it removes the offending characters from the string, and performs a second search with the cleaned string, and finally returns the result.

        > See [Lucene Query Parser Syntax](<http://lucene.apache.org/core/old_versioned_docs/versions/3_5_0/queryparsersyntax.html>)

      | {% shighlight yaml %}
        my_template:
          query:
            query_string:
              query: <<cleanable_query= '*' >>

        # or
        my_other_template:
          query:
            query_string:
              # must wrap in quotes or the ':' would generate a YAML error
              "<<cleanable_query= {query: '*'} >>"
        {% endshighlight %}
      p

      | {% shighlight ruby %}
        MyClass.my_template(:cleanable_query => params[:q])
        MyClass.my_other_template( :cleanable_query => { :query  => params[:q],
                                                         :fields => ['text', 'category'] } )
        {% endshighlight %}



