table.code-topics.api-methods cellspacing=0 cellpadding=0


  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/index_/" target="_blank" Index

  tr
    td
      code Flex.store
    td
      markdown:
        Stores a document into the index using `PUT`.

        **Template**

      |
        {% shighlight yaml %}
        store:
        - PUT
        - /<<index>>/<<type>>/<<id>>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.store :id    => id,               # required
                   :type  => nil,
                   :index => "flex_test_index"
        {% endshighlight %}

      markdown:
        > You must pass the source as the `:data` variable.

  tr
    td
      code Flex.put_store
    td
      markdown:
        Alias of `Flex.store` (defined for symmetry with `Flex.post_store`)

  tr
    td
      code Flex.post_store
    td
      markdown:
        Stores a document into the index using `post`: the `:id` is assigned by elasticsearch.

        **Template**

      |
        {% shighlight yaml %}
        post_store:
        - POST
        - /<<index>>/<<type>>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.post_store :index => "flex_test_index",
                        :type  => nil
        {% endshighlight %}

      markdown:
        > You must pass the source as the `:data` variable.




  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/delete/" target="_blank" Delete

  tr
    td
      code Flex.remove
    td
      markdown:
        Removes a document from the index.

        **Template**

      |
        {% shighlight yaml %}
        remove:
        - DELETE
        - /<<index>>/<<type>>/<<id>>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.remove :id    => id,               # required
                    :type  => nil,
                    :index => "flex_test_index"
        {% endshighlight %}




  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/get.html" target="_blank" Get

  tr
    td
      code Flex.get
    td
      markdown:
        Retrieves a document from the index.

        **Template**

      |
        {% shighlight yaml %}
        get:
        - GET
        - /<<index>>/<<type>>/<<id>>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.get :id    => id,               # required
                 :type  => nil,
                 :index => "flex_test_index"
        {% endshighlight %}

  tr
    td
      code Flex.get_source
    td
      markdown:
        Retrieves the source of a document from the index.

        **Template**

      |
        {% shighlight yaml %}
        get:
        - GET
        - /<<index>>/<<type>>/<<id>>/_source
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.get_source :id    => id,               # required
                        :type  => nil,
                        :index => "flex_test_index"
        {% endshighlight %}




  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/multi-get.html" target="_blank" Multi Get

  tr
    td
      code Flex.multi_get
    td
      markdown:
        Retrieves multiple documents

        **Template**

      |
        {% shighlight yaml %}
        multi_get:
        - GET
        - /<<index>>/<<type>>/_mget
        - ids: << ids >>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.multi_get :ids   => ids,              # required
                       :type  => nil,
                       :index => "flex_test_index"
        {% endshighlight %}





  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/update/" target="_blank" Update

  tr
    td
      code Flex.update
    td
      markdown:
        Updates a document based on a script provided.

        **Template**

      | {% shighlight yaml %}
        update:
        - POST
        - /<<index>>/<<type>>/<<id>>/_update
        {% endshighlight %}

      markdown:
        **Usage**

        You must pass script or doc and the other options as the :data variable

      |
        {% shighlight ruby %}
        Flex.update :id    => id,    # required
                    :type  => nil,
                    :index => "flex_test_index"
        {% endshighlight %}




  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/search" target="_blank" Search

  tr
    td
      code YourClass.your_custom_search
    td
      markdown:
        The Search API is completely covered by the Flex Templating system and mostly covered by the `flex-scopes` gem.
      == Helper.see('2.2,3')





  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/multi-search.html" target="_blank" Multi Search


  tr
    td
      code YourClass.flex.multi_search
    td
      markdown:

        > This method is documented here because it is an elasticsearch API method, however it is defined into your `flex` proxy included by `Flex::Templates`.

        The method allows you to do multi-searching by using multiple templates defined by your class. It takes 2 arguments. The first is a required hash with the templates names as the keys and the variable hash as the values. You can also use an array of arrays. The second is an optional hash of variables that will be used to render the `multi_search` template. The array of responses is available as `responses` method.

        **Template**

      |
        {% shighlight yaml %}
        multi_search:
        - GET
        - /<<index>>/<<type>>/_msearch
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        result = MyClass.flex.multi_search({:my_search_a => {:a_var => 'foo'},
                                            :my_search_b => {:another_var => 'bar'},
                                           {:index => 'another_index'})

        result.responses.each{|r| r.do_something }
        {% endshighlight %}





  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/percolate.html" target="_blank" Percolate

  tr
    td
      code Flex.put_percolator
    td
      markdown:
        Registers a named percolator query against an index.

        **Template**

      |
        {% shighlight yaml %}
        put_percolator:
        - PUT
        - /_percolator/<<index>>/<<percolator>>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.put_percolator :percolator => percolator,       # required
                            :index      => "flex_test_index"
        {% endshighlight %}

  tr
    td
      code Flex.delete_percolator
    td
      markdown:
        Unregisters a named percolator.

        **Template**

      |
        {% shighlight yaml %}
        delete_percolator:
        - DELETE
        - /_percolator/<<index>>/<<percolator>>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.delete_percolator :percolator => percolator,       # required
                               :index      => "flex_test_index"
        {% endshighlight %}

  tr
    td
      code Flex.percolate
    td
      markdown:
        Percolates a document.

        **Template**

      |
        {% shighlight yaml %}
        percolate:
        - GET
        - /<<index>>/<<type>>/_percolate
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.percolate :index => "flex_test_index",
                       :type  => nil
        {% endshighlight %}

      markdown:
        > You must pass the document (and additional queries) as the `:data` variable)






  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/bulk.html" target="_blank" Bulk

  tr
    td
      code Flex.bulk
    td
      markdown:
        Performs many index/delete operations in a single API call.

        **Template**

      |
        {% shighlight yaml %}
        bulk:
        - POST
        - /_bulk
        - << lines >>
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.bulk :lines => lines   # required
        {% endshighlight %}

      br
      == Helper.see('1.4#flex_import flex:import,2.5#collection_management_methods')


  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/count.html" target="_blank" Count

  tr
    td
      code Flex.count
    td
      markdown:
        Gets the number of matches for a query.

        **Template**

      |
        {% shighlight yaml %}
        count:
        - GET
        - /<<index>>/<<type>>/_count
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.count :index => "flex_test_index",
                   :type  => nil
        {% endshighlight %}






  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/delete-by-query.html" target="_blank" Delete by Query

  tr
    td
      code Flex.delete_by_query
    td
      markdown:
        Allows to delete documents from one or more indices and one or more types based on a query.

        **Template**

      |
        {% shighlight yaml %}
        delete_by_query:
        - DELETE
        - /<<index>>/<<type>>/_query
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.delete_by_query :index => "flex_test_index",
                             :type  => nil
        {% endshighlight %}

      markdown:
        > You can pass the query as the `:data` variable





  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/more-like-this.html" target="_blank" More Like This

  tr
    td
      code Flex.more_like_this
    td
      markdown:
        Allows to get documents that are "like" a specified document.

        **Template**

      |
        {% shighlight yaml %}
        more_like_this:
        - GET
        - /<<index>>/<<type>>/<<id>>/_mlt
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.more_like_this :id    => id,          # required
                            :index => "flex_test_index",
                            :type  => nil
        {% endshighlight %}

      markdown:
        > You can pass the search API (facets, from/to and so on) as the `:data` variable)

  tr
    td
      code  Flex.mlt
    td
      markdown:
        Alias for `Flex.more_like_this`





  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/validate/" target="_blank" Validate

  tr
    td
      code Flex.validate
    td
      markdown:
        Allows to validate a potentially expensive query without executing it.

        **Template**

      |
        {% shighlight yaml %}
        validate:
        - GET
        - /<<index>>/<<type>>/_validate/query
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.validate :index => "flex_test_index",
                      :type  => nil
        {% endshighlight %}

      markdown:
        > You must pass the query to validate as the `:data` variable
        > You can pass the parameters as the `:params` variable





  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      a href="http://www.elasticsearch.org/guide/reference/api/explain/" target="_blank" Explain

  tr
    td
      code Flex.explain
    td
      markdown:
        Computes a score explanation for a query and a specific document.

        **Template**

      |
        {% shighlight yaml %}
        explain:
        - GET
        - /<<index>>/<<type>>/<<id>>/_explain
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.explain :id    => id,    # required
                     :type  => nil,
                     :index => "flex_test_index"
        {% endshighlight %}

      markdown:
        > You must pass the query to explain as the `:data` variable
        > You can pass the parameters as the `:params` variable






  ///////////////////////////////////////////////////////////////////////////
  tr
    th colspan=2
      | Flex Additions


  tr
    td
      code  Flex.match_all
    td
      markdown:

        Not a real API method, but handy:

        **Template**

      |
        {% shighlight yaml %}
        match_all:
        - GET
        - /<<index>>/<<type>>/_search
        - query:
            match_all: {}
        {% endshighlight %}

      markdown:
        **Usage**

      |
        {% shighlight ruby %}
        Flex.match_all :index => "flex_test_index",
                       :type  => nil
        {% endshighlight %}

